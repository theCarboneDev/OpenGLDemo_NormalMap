#version 330 core
out vec4 FragColor;

in VS_OUT{
    vec3 FragPos;
    vec2 TexCoord;
    vec3 Normal;
    vec3 TangentLightPos;
    vec3 TangentViewPos;
    vec3 TangentFragPos;
} fs_in;

uniform sampler2D texture1;
uniform sampler2D normal_texture;
uniform sampler2D disp_texture;

uniform bool specialEffect;

void main(){
    vec3 viewDir = normalize(fs_in.TangentViewPos - fs_in.TangentFragPos);
    vec3 color = texture(texture1, fs_in.TexCoord).rgb;

    vec3 norm = texture(normal_texture, fs_in.TexCoord).rgb;

    norm = normalize(norm * 2.0 - 1.0);
    if(specialEffect){
        norm = normalize(fs_in.Normal);
    }

    vec3 ambient = color * 0.1;

    vec3 lightDir = normalize(fs_in.TangentLightPos - fs_in.TangentFragPos);
    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = color * diff;

    vec3 halfwayDir = normalize(viewDir + lightDir);
    float spec = pow(max(dot(norm, halfwayDir), 0.0), 32.0);
    vec3 specular = color * spec;

    FragColor = vec4(ambient+diffuse+specular, 1.0);
}
